{"version":3,"sources":["Components/Default/DefaultHeader/DefaultHeader.jsx","Components/Default/DefaultAlgorithmTitle/DefaultAlgorithmTitle.jsx","Components/PointDistributionMenu/PointDistributionMenu.jsx","Algorithms/Random.jsx","Algorithms/EvenlySpacedRandomPoints.jsx","Components/PointDistributionGrid/PointDistributionGrid.jsx","Algorithms/PoissonDisc.jsx","Algorithms/RandomPoints.jsx","Components/PointDistribution/PointDistribution.jsx","App.js","reportWebVitals.js","index.js"],"names":["DefaultHeader","className","id","href","Component","DefaultAlgorithmTitle","this","props","title","subtitle","Typography","variant","gutterBottom","PointDistributionMenu","state","algTitle","algDesc","newSettings","onSettingsChanged","algoId","algorightmInfo","description","length","setState","Slider","defaultValue","min","step","max","marks","value","label","onChange","e","mapSize","algorithm","updateAlgorithmDescription","defaultProps","OnSettingsChanged","getRandom","Math","random","findBestDivider","number","targetRatio","i","result","divider","abs","PointDistributionGrid","algorithmId","gridWidth","gridHeight","pointCount","floor","points","bestDividers","x_count","y_count","rectSize","x","y","push","console","log","generateEvenlySpacedRandomPoints","k","generatePoissonDiscPoints","generateRandomPoints","pointList","canvas","pointSize","lineWidth","sizeModifier","getSizeRatio","ctx","getContext","strokeStyle","clearRect","clientWidth","clientHeight","beginPath","arc","PI","stroke","document","getElementById","generatePoints","drawPoints","canvasParent","parentElement","width","offsetWidth","height","offsetHeight","updateCanvasSize","componentDidUpdate","window","addEventListener","onWindowResize","removeEventListener","onClick","PointDistribution","pointNumber","val","target","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"6XAIqBA,E,4JACnB,WACE,OACE,wBAAQC,UAAU,iBAAlB,SACE,qBAAKA,UAAU,SAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,mBACEA,UAAU,SACVC,GAAG,eACHC,KAAK,6BAHP,oC,GAN+BC,a,QCCtBC,G,kKACnB,WAAU,IAAD,EACqBC,KAAKC,MAAzBC,EADD,EACCA,MAAOC,EADR,EACQA,SACf,OACE,sBAAKR,UAAU,qCAAf,UACE,cAACS,EAAA,EAAD,CAAYR,GAAG,oBAAoBS,QAAQ,KAAKC,cAAY,EAA5D,SACGJ,IAEH,cAACE,EAAA,EAAD,CAAYR,GAAG,oBAAoBS,QAAQ,WAAWC,cAAY,EAAlE,SACGH,W,GATwCL,c,gBCE9BS,G,kNACnBC,MAAQ,CACNC,SAAU,uBACVC,QACE,yP,uDAIJ,SAAkBC,GACoB,MAAhCX,KAAKC,MAAMW,mBACbZ,KAAKC,MAAMW,kBAAkBD,K,wCAIjC,SAA2BE,GACzB,IAAMC,EAAiB,CACrB,CACEZ,MAAO,uBACPa,YACE,yPAGJ,CACEb,MAAO,sBACPa,YACE,yPAGJ,CACEb,MAAO,eACPa,YACE,0PAKFF,GAAUC,EAAeE,QAE7BhB,KAAKiB,SAAS,CACZR,SAAUK,EAAeD,GAAQX,MACjCQ,QAASI,EAAeD,GAAQE,gB,oBAIpC,WAAU,IAAD,OA+BP,OACE,qBAAKpB,UAAU,yBAAf,SACE,sBAAKA,UAAU,mCAAf,UACE,cAACS,EAAA,EAAD,CAAYR,GAAG,oBAAoBS,QAAQ,KAAKC,cAAY,EAA5D,sBAGA,sBAAKX,UAAU,yBAAf,UACE,cAACS,EAAA,EAAD,CAAYR,GAAG,oBAAoBS,QAAQ,KAAKC,cAAY,EAA5D,sBAGA,cAACY,EAAA,EAAD,CACEC,aAAc,EACdC,IAAK,EACLC,KAAM,EACNC,IAAK,EACLC,MA9BQ,CAChB,CACEC,MAAO,EACPC,MAAO,SAET,CACED,MAAO,EACPC,MAAO,UAET,CACED,MAAO,EACPC,MAAO,UAoBD9B,UAAU,QACV+B,SAAU,SAACC,EAAGH,GAAJ,OACR,EAAKZ,kBAAkB,CAAEgB,QAASJ,UAIxC,sBAAK7B,UAAU,yBAAf,UACE,cAACS,EAAA,EAAD,CAAYR,GAAG,oBAAoBS,QAAQ,KAAKC,cAAY,EAA5D,uBAGA,cAACY,EAAA,EAAD,CACEE,IAAK,EACLC,KAAM,EACNC,IAAK,EACLC,MA5Da,CACrB,CACEC,MAAO,EACPC,MAAO,gBAET,CACED,MAAO,EACPC,MAAO,QAET,CACED,MAAO,EACPC,MAAO,iBAkDD9B,UAAU,QACV+B,SAAU,SAACC,EAAGH,GACZ,EAAKZ,kBAAkB,CAAEiB,UAAWL,IACpC,EAAKM,2BAA2BN,SAItC,cAACpB,EAAA,EAAD,CAAYR,GAAG,oBAAoBS,QAAQ,KAAKC,cAAY,EAA5D,SACGN,KAAKQ,MAAMC,WAEd,cAACL,EAAA,EAAD,CAAYR,GAAG,oBAAoBS,QAAQ,QAAQC,cAAY,EAA/D,SACGN,KAAKQ,MAAME,mB,GArH2BZ,cA6HnDS,EAAsBwB,aAAe,CACnCC,kBAAmB,MCrId,IAAMC,EAAY,SAACb,EAAKE,GAC7B,OAAOY,KAAKC,UAAYb,EAAMF,GAAOA,GC4BjCgB,EAAkB,SAACC,EAAQC,GAC/B,IAAIC,EAAI,EACJC,EAAS,KACb,IAAKD,EAAI,EAAGA,GAAKF,EAAQE,IACvB,GAAIF,EAASE,GAAK,EAAG,CACnB,IAAIE,EAAUJ,EAASE,EACvB,KACY,MAAVC,GACAN,KAAKQ,IAAIH,EAAIE,EAAUH,GACrBJ,KAAKQ,IAAIF,EAAO,GAAKA,EAAO,GAAKF,IAInC,MAFAE,EAAS,CAACD,EAAGE,GAMnB,OAAOD,GClCYG,G,wDACnB,aAAe,IAAD,8BACZ,gBACKnC,MAAQ,GAFD,E,gDAKd,SAAaoB,GACX,OAAQA,GACN,KAAK,EACL,QACE,MAAO,GACT,KAAK,EACH,MAAO,IACT,KAAK,EACH,MAAO,O,4BAIb,SAAegB,EAAaC,EAAWC,GACrC,IAAMC,EAAab,KAAKc,MAAMH,EAAYC,EAvBxB,KAwBlB,OAAQF,GACN,KAAK,EACH,ODhCwC,SAC9CC,EACAC,EACAC,GAUA,IARA,IACME,EAAS,GAEXC,EAAed,EAAgBW,EAAYD,EAAaD,GACxDM,EAAUD,EAAa,GACvBE,EAAUF,EAAa,GACvBG,EAAW,CAACR,EAAYM,EAASL,EAAaM,GAEzCE,EAAI,EAAGA,EAAIH,EAASG,IAC3B,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAASG,IAC3BN,EAAOO,KAAK,CACVvB,EAAUsB,EAAIF,EAAS,IAAKE,EAAI,GAAKF,EAAS,IAC9CpB,EAAUqB,EAAID,EAAS,IAAKC,EAAI,GAAKD,EAAS,MAMpD,OADAI,QAAQC,IAAIX,EAAa,uCAClBE,ECSMU,CACLd,EACAC,EACAC,GAEJ,KAAK,EACH,OCtCiC,SACvCF,EACAC,EACAC,EACAa,GAIA,IAFA,IAAMX,EAAS,GAENV,EAAI,EAAGA,EAAIQ,EAAYR,IAC9BU,EAAOO,KAAK,CAACvB,EAAU,EAAGa,GAAab,EAAU,EAAGY,KAGtD,OADAY,QAAQC,IAAIX,EAAa,4BAClBE,ED0BMY,CAA0BhB,EAAWC,EAAYC,GAC1D,KAAK,EACL,QACE,OEzC4B,SAACF,EAAWC,EAAYC,GAG1D,IAFA,IAAME,EAAS,GAENV,EAAI,EAAGA,EAAIQ,EAAYR,IAC9BU,EAAOO,KAAK,CAACvB,EAAU,EAAGa,GAAab,EAAU,EAAGY,KAGtD,OADAY,QAAQC,IAAIX,EAAa,4BAClBE,EFkCMa,CAAqBjB,EAAWC,EAAYC,M,wBAIzD,SAAWgB,EAAWC,EAAQC,EAAWC,GACvC,IAAMC,EAAenE,KAAKoE,aAAapE,KAAKC,MAAM2B,SAC9CyC,EAAML,EAAOM,WAAW,MAC5BD,EAAIE,YAAc,UAClBF,EAAIH,UAAYA,EAChBG,EAAIG,UAAU,EAAG,EAAGR,EAAOS,YAAaT,EAAOU,cAC/C,IAAK,IAAInC,EAAI,EAAGA,EAAIwB,EAAU/C,OAAQuB,IAAK,CAEzC,IAAMe,EAAIS,EAAUxB,GAAG,GAAK4B,EACtBZ,EAAIQ,EAAUxB,GAAG,GAAK4B,EAG1Bb,EAAIW,EAAYC,EAAY,GAC5BZ,EAAIW,EAAYC,EAAYF,EAAOS,aACnClB,EAAIU,EAAYC,EAAY,GAC5BX,EAAIU,EAAYC,EAAYF,EAAOU,eAEnCL,EAAIM,YACJN,EAAIO,IAAItB,EAAGC,EAAGU,EAAW,EAAa,EAAV/B,KAAK2C,IACjCR,EAAIS,a,gCAKV,WACE,IAAMd,EAASe,SAASC,eAAe,UACjCb,EAAenE,KAAKoE,aAAapE,KAAKC,MAAM2B,SAC5CiB,EAAYX,KAAKc,MAAMgB,EAAOS,YAAcN,GAC5CrB,EAAaZ,KAAKc,MAAMgB,EAAOU,aAAeP,GAE9ClB,EAASjD,KAAKiF,eAClBjF,KAAKC,MAAM4B,UACXgB,EACAC,GAEF9C,KAAKkF,WACHjC,EACAe,EA3EwB,IA4EAG,EA3EA,GA4EAA,K,8BAI5B,WACE,IAAMH,EAASe,SAASC,eAAe,UACjCG,EAAeJ,SAASC,eAAe,UAAUI,cACvDpB,EAAOqB,MAAQF,EAAaG,YAAc,EAC1CtB,EAAOuB,OAASJ,EAAaK,aAAe,I,4BAG9C,WACExF,KAAKyF,mBACLzF,KAAK0F,uB,+BAGP,WAAqB,IAAD,OAClBC,OAAOC,iBAAiB,UAAU,kBAAM,EAAKC,oBAC7C7F,KAAKyF,mBACLzF,KAAK0F,uB,kCAGP,WAAwB,IAAD,OACrBC,OAAOG,oBAAoB,UAAU,kBAAM,EAAKD,sB,oBAGlD,WAAU,IAAD,OACP,OACE,qBAAKlG,UAAU,yBAAf,SACE,qBAAKA,UAAU,0BAAf,SACE,wBAAQC,GAAG,SAASmG,QAAS,kBAAM,EAAKL,gC,GAxGC5F,cA+GnD6C,EAAsBZ,aAAe,CACnCH,QAAS,EACTC,UAAW,G,IGzHQmE,E,kDACnB,aAAe,IAAD,8BACZ,gBACKxF,MAAQ,CACXyF,YAAa,EACbrE,QAAS,EACTC,UAAW,WALD,E,qDASd,SAAkBlB,GAEa,MAA3BA,EAAYsF,aACZtF,EAAYsF,aAAejG,KAAKQ,MAAMyF,aAEtCjG,KAAKiB,SAAS,CAAEgF,YAAatF,EAAYsF,cAGlB,MAAvBtF,EAAYiB,SACZjB,EAAYiB,SAAW5B,KAAKQ,MAAMoB,SAElC5B,KAAKiB,SAAS,CAAEW,QAASjB,EAAYiB,UAGZ,MAAzBjB,EAAYkB,WACZlB,EAAYkB,WAAa7B,KAAKQ,MAAMqB,WAEpC7B,KAAKiB,SAAS,CAAEY,UAAWlB,EAAYkB,c,yBAG3C,SAAYF,GACV3B,KAAKiB,SAAS,CAAEiF,IAAKvE,EAAEwE,OAAO3E,U,oBAGhC,WAAU,IAAD,OACP,OACE,sBAAK7B,UAAW,eAAiBK,KAAKC,MAAMN,UAA5C,UACE,cAAC,EAAD,CACEsG,YAAajG,KAAKQ,MAAMyF,YACxBrE,QAAS5B,KAAKQ,MAAMoB,QACpBC,UAAW7B,KAAKQ,MAAMqB,YAExB,cAAC,EAAD,CACEjB,kBAAmB,SAACD,GAAD,OACjB,EAAKC,kBAAkBD,a,GA5CYb,aCGhC,SAASsG,IACtB,OACE,sBAAKzG,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAuBO,MAAM,wCAC7B,cAAC,EAAD,CAAmBP,UAAU,SAC7B,qBAAKA,UAAU,uBCbrB,IAYe0G,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFjC,SAASC,eAAe,SAM1BqB,M","file":"static/js/main.d2dbad5c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./DefaultHeader.css\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nexport default class DefaultHeader extends Component {\r\n  render() {\r\n    return (\r\n      <header className=\"default-header\">\r\n        <nav className=\"navbar\">\r\n          <div className=\"container-fluid\">\r\n            <a\r\n              className=\"button\"\r\n              id=\"to-portfolio\"\r\n              href=\"http://www.tom.ille-web.de\"\r\n            >\r\n              To Portfolio\r\n            </a>\r\n          </div>\r\n        </nav>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport \"./DefaultAlgorithmTitle.css\";\r\n\r\nexport default class DefaultAlgorithmTitle extends Component {\r\n  render() {\r\n    const { title, subtitle } = this.props;\r\n    return (\r\n      <div className=\"default-algorithm-title col-12 p-3\">\r\n        <Typography id=\"non-linear-slider\" variant=\"h3\" gutterBottom>\r\n          {title}\r\n        </Typography>\r\n        <Typography id=\"non-linear-slider\" variant=\"subtitle\" gutterBottom>\r\n          {subtitle}\r\n        </Typography>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n//import CustomSlider from \"../Default/CustomSlider/CustomSlider\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport \"./PointDistributionMenu.css\";\r\n\r\nexport default class PointDistributionMenu extends Component {\r\n  state = {\r\n    algTitle: \"Fully Random Scatter\",\r\n    algDesc:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown\" +\r\n      \" printer took a galley of type and scrambled it to make a type specimen book.\",\r\n  };\r\n\r\n  onSettingsChanged(newSettings) {\r\n    if (this.props.onSettingsChanged != null) {\r\n      this.props.onSettingsChanged(newSettings);\r\n    }\r\n  }\r\n\r\n  updateAlgorithmDescription(algoId) {\r\n    const algorightmInfo = [\r\n      {\r\n        title: \"Fully Random Scatter\",\r\n        description:\r\n          \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown\" +\r\n          \" printer took a galley of type and scrambled it to make a type specimen book.\",\r\n      },\r\n      {\r\n        title: \"My Custom Algorithm\",\r\n        description:\r\n          \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown\" +\r\n          \" printer took a galley of type and scrambled it to make a type specimen book.\",\r\n      },\r\n      {\r\n        title: \"Poisson-Disc\",\r\n        description:\r\n          \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown\" +\r\n          \" printer took a galley of type and scrambled it to make a type specimen book.\",\r\n      },\r\n    ];\r\n\r\n    if (algoId >= algorightmInfo.length) return;\r\n\r\n    this.setState({\r\n      algTitle: algorightmInfo[algoId].title,\r\n      algDesc: algorightmInfo[algoId].description,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const algorithmMarks = [\r\n      {\r\n        value: 0,\r\n        label: \"Fully Random\",\r\n      },\r\n      {\r\n        value: 1,\r\n        label: \"mine\",\r\n      },\r\n      {\r\n        value: 2,\r\n        label: \"Poisson-Disc\",\r\n      },\r\n    ];\r\n\r\n    const sizeMarks = [\r\n      {\r\n        value: 0,\r\n        label: \"Small\",\r\n      },\r\n      {\r\n        value: 1,\r\n        label: \"Medium\",\r\n      },\r\n      {\r\n        value: 2,\r\n        label: \"Large\",\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <div className=\"main-alg-element col-3\">\r\n        <div className=\"alg-menu point-distribution-menu\">\r\n          <Typography id=\"non-linear-slider\" variant=\"h4\" gutterBottom>\r\n            Settings\r\n          </Typography>\r\n          <div className=\"col-12 settings-slider\">\r\n            <Typography id=\"non-linear-slider\" variant=\"h5\" gutterBottom>\r\n              Map Size\r\n            </Typography>\r\n            <Slider\r\n              defaultValue={0}\r\n              min={0}\r\n              step={1}\r\n              max={2}\r\n              marks={sizeMarks}\r\n              className=\"col-8\"\r\n              onChange={(e, value) =>\r\n                this.onSettingsChanged({ mapSize: value })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"col-12 settings-slider\">\r\n            <Typography id=\"non-linear-slider\" variant=\"h5\" gutterBottom>\r\n              Algorithm\r\n            </Typography>\r\n            <Slider\r\n              min={0}\r\n              step={1}\r\n              max={2}\r\n              marks={algorithmMarks}\r\n              className=\"col-8\"\r\n              onChange={(e, value) => {\r\n                this.onSettingsChanged({ algorithm: value });\r\n                this.updateAlgorithmDescription(value);\r\n              }}\r\n            />\r\n          </div>\r\n          <Typography id=\"non-linear-slider\" variant=\"h6\" gutterBottom>\r\n            {this.state.algTitle}\r\n          </Typography>\r\n          <Typography id=\"non-linear-slider\" variant=\"body1\" gutterBottom>\r\n            {this.state.algDesc}\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPointDistributionMenu.defaultProps = {\r\n  OnSettingsChanged: null,\r\n};\r\n\r\n/*\r\n<CustomSlider\r\n            id=\"points-number\"\r\n            caption=\"Number of Points\"\r\n            min=\"20\"\r\n            max=\"500\"\r\n            onChange={(newVal) => {\r\n              this.onSettingsChanged({ pointNumber: newVal });\r\n            }}\r\n          />\r\n <CustomSlider\r\n            id=\"map-size\"\r\n            caption=\"Size\"\r\n            min=\"1\"\r\n            max=\"10\"\r\n            onChange={(newVal) => this.onSettingsChanged({ mapSize: newVal })}\r\n          />\r\n\r\n          */\r\n","export const getRandom = (min, max) => {\r\n  return Math.random() * (max - min) + min;\r\n};\r\n","import { getRandom } from \"./Random\";\r\n\r\nexport const generateEvenlySpacedRandomPoints = (\r\n  gridWidth,\r\n  gridHeight,\r\n  pointCount\r\n) => {\r\n  var i = 0;\r\n  const points = [];\r\n\r\n  var bestDividers = findBestDivider(pointCount, gridHeight / gridWidth);\r\n  var x_count = bestDividers[0];\r\n  var y_count = bestDividers[1];\r\n  var rectSize = [gridWidth / x_count, gridHeight / y_count];\r\n\r\n  for (let x = 0; x < x_count; x++) {\r\n    for (let y = 0; y < y_count; y++) {\r\n      points.push([\r\n        getRandom(y * rectSize[1], (y + 1) * rectSize[1]),\r\n        getRandom(x * rectSize[0], (x + 1) * rectSize[0]),\r\n      ]);\r\n    }\r\n  }\r\n\r\n  console.log(pointCount + \" points generated with even spacing\");\r\n  return points;\r\n};\r\n\r\n// finds the pair of dividers of a number whos ratio is closest to the given ratio\r\nconst findBestDivider = (number, targetRatio) => {\r\n  var i = 0;\r\n  var result = null;\r\n  for (i = 1; i <= number; i++) {\r\n    if (number % i == 0) {\r\n      var divider = number / i;\r\n      if (\r\n        result == null ||\r\n        Math.abs(i / divider - targetRatio) <\r\n          Math.abs(result[0] / result[1] - targetRatio)\r\n      ) {\r\n        result = [i, divider];\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return result;\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nimport { generateRandomPoints } from \"../../Algorithms/RandomPoints\";\r\nimport { generateEvenlySpacedRandomPoints } from \"../../Algorithms/EvenlySpacedRandomPoints\";\r\nimport { generatePoissonDiscPoints } from \"../../Algorithms/PoissonDisc\";\r\n\r\nimport \"./PointDistributionGrid.css\";\r\n\r\nconst POINT_DENSITY = 0.05;\r\nconst POINT_SIZE_MULTIPLIER = 0.75;\r\nconst LINE_WIDTH_MULTIPLIER = 0.5;\r\n\r\nexport default class PointDistributionGrid extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {};\r\n  }\r\n\r\n  getSizeRatio(mapSize) {\r\n    switch (mapSize) {\r\n      case 0:\r\n      default:\r\n        return 0.1;\r\n      case 1:\r\n        return 0.25;\r\n      case 2:\r\n        return 0.45;\r\n    }\r\n  }\r\n\r\n  generatePoints(algorithmId, gridWidth, gridHeight) {\r\n    const pointCount = Math.floor(gridWidth * gridHeight * POINT_DENSITY);\r\n    switch (algorithmId) {\r\n      case 1:\r\n        return generateEvenlySpacedRandomPoints(\r\n          gridWidth,\r\n          gridHeight,\r\n          pointCount\r\n        );\r\n      case 2:\r\n        return generatePoissonDiscPoints(gridWidth, gridHeight, pointCount, 30);\r\n      case 0:\r\n      default:\r\n        return generateRandomPoints(gridWidth, gridHeight, pointCount);\r\n    }\r\n  }\r\n\r\n  drawPoints(pointList, canvas, pointSize, lineWidth) {\r\n    const sizeModifier = this.getSizeRatio(this.props.mapSize);\r\n    var ctx = canvas.getContext(\"2d\");\r\n    ctx.strokeStyle = \"#2f528f\";\r\n    ctx.lineWidth = lineWidth;\r\n    ctx.clearRect(0, 0, canvas.clientWidth, canvas.clientHeight);\r\n    for (let i = 0; i < pointList.length; i++) {\r\n      // points to canvas space\r\n      const x = pointList[i][1] / sizeModifier;\r\n      const y = pointList[i][0] / sizeModifier;\r\n      // ignore points that are too close to the edges\r\n      if (\r\n        x - pointSize - lineWidth > 0 &&\r\n        x + pointSize + lineWidth < canvas.clientWidth &&\r\n        y - pointSize - lineWidth > 0 &&\r\n        y + pointSize + lineWidth < canvas.clientHeight\r\n      ) {\r\n        ctx.beginPath();\r\n        ctx.arc(x, y, pointSize, 0, Math.PI * 2);\r\n        ctx.stroke();\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const canvas = document.getElementById(\"canvas\");\r\n    const sizeModifier = this.getSizeRatio(this.props.mapSize);\r\n    const gridWidth = Math.floor(canvas.clientWidth * sizeModifier);\r\n    const gridHeight = Math.floor(canvas.clientHeight * sizeModifier);\r\n\r\n    const points = this.generatePoints(\r\n      this.props.algorithm,\r\n      gridWidth,\r\n      gridHeight\r\n    );\r\n    this.drawPoints(\r\n      points,\r\n      canvas,\r\n      POINT_SIZE_MULTIPLIER / sizeModifier,\r\n      LINE_WIDTH_MULTIPLIER / sizeModifier\r\n    );\r\n  }\r\n\r\n  updateCanvasSize() {\r\n    const canvas = document.getElementById(\"canvas\");\r\n    const canvasParent = document.getElementById(\"canvas\").parentElement;\r\n    canvas.width = canvasParent.offsetWidth - 2;\r\n    canvas.height = canvasParent.offsetHeight - 2;\r\n  }\r\n\r\n  onWindowResize() {\r\n    this.updateCanvasSize();\r\n    this.componentDidUpdate();\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", () => this.onWindowResize());\r\n    this.updateCanvasSize();\r\n    this.componentDidUpdate();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", () => this.onWindowResize());\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-9 main-alg-element\">\r\n        <div className=\"point-distribution-grid\">\r\n          <canvas id=\"canvas\" onClick={() => this.componentDidUpdate()} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPointDistributionGrid.defaultProps = {\r\n  mapSize: 0,\r\n  algorithm: 0,\r\n};\r\n","import { getRandom } from \"./Random\";\r\n\r\nexport const generatePoissonDiscPoints = (\r\n  gridWidth,\r\n  gridHeight,\r\n  pointCount,\r\n  k\r\n) => {\r\n  const points = [];\r\n  // set points\r\n  for (let i = 0; i < pointCount; i++) {\r\n    points.push([getRandom(0, gridHeight), getRandom(0, gridWidth)]);\r\n  }\r\n  console.log(pointCount + \" random points generated\");\r\n  return points;\r\n};\r\n","import { getRandom } from \"./Random\";\r\n\r\nexport const generateRandomPoints = (gridWidth, gridHeight, pointCount) => {\r\n  const points = [];\r\n  // set points\r\n  for (let i = 0; i < pointCount; i++) {\r\n    points.push([getRandom(0, gridHeight), getRandom(0, gridWidth)]);\r\n  }\r\n  console.log(pointCount + \" random points generated\");\r\n  return points;\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PointDistributionMenu from \"../PointDistributionMenu/PointDistributionMenu.jsx\";\r\nimport PointDistributionGrid from \"../PointDistributionGrid/PointDistributionGrid.jsx\";\r\n\r\nexport default class PointDistribution extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      pointNumber: 0,\r\n      mapSize: 0,\r\n      algorithm: \"default\",\r\n    };\r\n  }\r\n\r\n  onSettingsChanged(newSettings) {\r\n    if (\r\n      newSettings.pointNumber != null &&\r\n      newSettings.pointNumber != this.state.pointNumber\r\n    )\r\n      this.setState({ pointNumber: newSettings.pointNumber });\r\n\r\n    if (\r\n      newSettings.mapSize != null &&\r\n      newSettings.mapSize != this.state.mapSize\r\n    )\r\n      this.setState({ mapSize: newSettings.mapSize });\r\n\r\n    if (\r\n      newSettings.algorithm != null &&\r\n      newSettings.algorithm != this.state.algorithm\r\n    )\r\n      this.setState({ algorithm: newSettings.algorithm });\r\n  }\r\n\r\n  updateState(e) {\r\n    this.setState({ val: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={\"alg-row row \" + this.props.className}>\r\n        <PointDistributionGrid\r\n          pointNumber={this.state.pointNumber}\r\n          mapSize={this.state.mapSize}\r\n          algorithm={this.state.algorithm}\r\n        />\r\n        <PointDistributionMenu\r\n          onSettingsChanged={(newSettings) =>\r\n            this.onSettingsChanged(newSettings)\r\n          }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import \"./App.css\";\nimport DefaultHeader from \"./Components/Default/DefaultHeader/DefaultHeader.jsx\";\nimport DefaultAlgorithmTitle from \"./Components/Default/DefaultAlgorithmTitle/DefaultAlgorithmTitle.jsx\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./css/Algorithms.css\";\nimport PointDistribution from \"./Components/PointDistribution/PointDistribution.jsx\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <DefaultHeader />\n      <DefaultAlgorithmTitle title=\"Algorithms for scattering 2D Points\" />\n      <PointDistribution className=\"pb-3\" />\n      <div className=\"container-fluid\"></div>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}